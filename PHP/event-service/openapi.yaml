openapi: 3.0.3
info:
  title: event-service
  description: |-
    This is a simple part of the backend for calendar application. Service allows create, read, update and delete events
    and corresponding event tags. It's possible to find events by tags and time.
  version: 1.0.0
servers:
  - url: http://localhost/api/v1
tags:
  - name: event
    description: Basic operations with events
paths:
  /event:
    get:
      tags:
        - event
      summary: Find all events
      description: Find all events
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      tags:
        - event
      summary: Creates a new event
      description: Creates a new event
      requestBody:
        description: Event id can be null
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '200':
          description: Returned Event always has id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    put:
      tags:
        - event
      summary: Updates an existing event
      description: Updates an existing event. Tag ids are not required. Deletes old event tags. Creates tags from body.
      requestBody:
        description: Event id is required
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '200':
          description: Updated event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Event id missing
        '404':
          description: Event with given id does not exist
    delete:
      tags:
        - event
      summary: Deletes an event
      description: Deletes an event. Deletes event tags
      parameters:
        - name: id
          in: path
          description: Event id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Event id missing
        '404':
          description: Event with given id does not exist
  /event/{eventId}:
    get:
      tags:
        - event
      summary: Find event by ID
      description: Returns a single event
      parameters:
        - name: eventId
          in: path
          description: ID of event to return
          required: true
          schema:
            type: integer
            format: int64
            example: 2
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event with given id not found
  /event/between:
    get:
      tags:
        - event
      summary: Find events that start in given period of time
      description: Return all events with start between from and to. When no `to` given all events with start after `from` returned
      parameters:
        - name: from
          in: query
          description: Left bound of the time period to find events in
          required: true
          schema:
            type: string
            format: date-time
            example: 2022-11-14T17:00:00+00:00
        - name: to
          in: query
          description: Right bound (excluded) of the time period to find events in
          required: false
          schema:
            type: string
            format: date-time
            example: 2022-12-14T17:00:00+00:00
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  /event/byTags:
    get:
      tags:
        - event
      summary: Find events by tags
      description: Returns all events that have one or more of provided tag names
      requestBody:
        description: Only tag names are required
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          example: 10
        name:
          type: string
          example: My awesome event
        start:
          type: string
          format: date-time
          example: 2022-11-14T17:24:00+00:00
        end:
          type: string
          format: date-time
          nullable: true
          example: 2022-11-14T17:24:00+00:00
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          example: 5
        name:
          type: string
          example: lesson